数组 与 集合 
可存基本数据类型也可存引用数据类型
可存基本数据类型（但要变成其对应的包装类）也可存引用数据类型
数组长度固定
集合长度可以改变 自动改变 自动伸缩可长可短
ArrayList成员方法
方法名
boolean add(E e)
boolean remove(E e)
E remove(int index
E set(int index,E e)
E get(int index)
int size()
                          说明
                          添加元素，返回值表示是否添加成功
                          删除指定元素,返回值表示是否删除成功
                          删除指定索引的元素,返回被删除元素
                          修改指定索引下的元素,返回原来的元素
                          获取指定索引的元素
                          集合的长度，也就是集合中元素的个数



基本数据类型对应的包装类
byte                                        gyte
short                                        Short
char                                         Character
int                                         Integer
long                                          Long
float                                         Float
double                                      Double 
boolean                                        Boolean

package src.api.arraylist.arraylistdemo;

import java.util.ArrayList;

public class ArrayListDemo1 {
    public static void main(String[] args) {
        //创建集合的对象
        //泛型：限定集合中存储数据的类型
        //ArrayList<String> list = new ArrayList<String>();
        //jdk7

        //此时我们创建的是ArrayList的对象，而ArrayList是java已经写好的类
        //在底层做了一些处理
        //打印的不是地址值 而是集合中的所有数据
        ////在展示时会用[]包裹所有数据

        ArrayList<String> list = new ArrayList<>();
        System.out.println(list);
    }
}
package src.api.arraylist.arraylistdemo;

import java.util.ArrayList;

public class ArrayListDemo2 {
    public static void main(String[] args) {

        //创建一个集合
        ArrayList<String> list = new ArrayList<>();

        //添加元素
        list.add("aaa");
        list.add("bbb");
        list.add("ccc");
        list.add("zzz");


        //删除元素
        /*boolean result1 = list.remove("aaa");
        System.out.println(result1);
        boolean result2 = list.remove("xxx");
        System.out.println(result2);
        String str = list.remove(2);
        System.out.println(str);*/


        //修改元素
        /*String result = list.set(1, "xxx");
        System.out.println(result);
        System.out.println(list);*/

        //查询元素
        /*String result = list.get(0);
        System.out.println(result);*/

        //遍历
        for (int i = 0; i < list.size(); i++) {
            // i 表示索引
            String str = list.get(i);
            System.out.println(str);
        }

    }
}
























