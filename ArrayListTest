package src.api.arraylist.arraylisttest;

import java.util.ArrayList;

public class Test1 {
    public static void main(String[] args) {
        //需求:定义一个集合，添加字符串，并进行遍历
        //遍历格式参照:[元素1,元素2,元素3]。
        ArrayList<String> list = new ArrayList<>();
        list.add("zzz");
        list.add("xxx");
        list.add("yyy");
        System.out.print("[");
        for (int i = 0; i < list.size(); i++) {
            if (i != list.size() - 1 ){
                System.out.print(list.get(i)+", ");
            }else{
                System.out.print(list.get(i)+"]");
            }
        }
    }
}
package src.api.arraylist.arraylisttest;

import java.util.ArrayList;

public class Test2 {
    public static void main(String[] args) {
        //需求:定义一个集合，添加数字，并进行遍历遍历格式参照:[元素1,元素2,元素3]
        ArrayList<Integer> list = new ArrayList<>();

        //int 类型可以与Integer类型互相转化
        list.add(1);
        list.add(2);
        list.add(4);
        list.add(6);
        System.out.print("[");
        for (int i = 0; i < list.size(); i++) {
            if (i != list.size() - 1){
                System.out.print(list.get(i) + ", ");
            }else{
                System.out.print(list.get(i) + "]");
            }
        }
    }
}
package src.api.arraylist.arraylisttest;

import java.util.ArrayList;

public class Test3 {
    public static void main(String[] args) {
        ArrayList<Character> list = new ArrayList<>();
        list.add('a');
        list.add('a');
        list.add('a');
        list.add('a');
        System.out.println(list);
    }
}
package src.api.arraylist.arraylisttest.Test8;

import java.util.ArrayList;

public class Test {
    public static void main(String[] args) {
        ArrayList<Phone> list = new ArrayList<>();
        Phone p1 = new Phone("小米",1000);
        Phone p2 = new Phone("苹果",8000);
        Phone p3 = new Phone("锤子",2999);ij
        list.add(p1);
        list.add(p2);
        list.add(p3);
        for (int i = 0; i < list.size(); i++) {
            Phone p = new Phone();
            p = list.get(i);
            if (p.getPeice() < 3000){
                System.out.println(p.getBrand()+", "+p.getPeice());
            }
        }
    }
}
lkm
